// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "proto_proxy_in/main.proto" (syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType as MessageType$ } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message Main
 */
export interface Main {
    /**
     * @generated from protobuf field: MessageType type = 1;
     */
    type: MessageType;
    /**
     * @generated from protobuf field: optional bytes value = 2;
     */
    value?: Uint8Array;
}
/**
 * @generated from protobuf enum MessageType
 */
export enum MessageType {
    /**
     * @generated synthetic value - protobuf-ts requires all enums to have a 0 value
     */
    UNSPECIFIED$ = 0,
    /**
     * @generated from protobuf enum value: SetFile = 1;
     */
    SetFile = 1,
    /**
     * @generated from protobuf enum value: DeleteFile = 2;
     */
    DeleteFile = 2,
    /**
     * @generated from protobuf enum value: GetFiles = 3;
     */
    GetFiles = 3,
    /**
     * @generated from protobuf enum value: InitCommand = 4;
     */
    InitCommand = 4
}
// @generated message type with reflection information, may provide speed optimized methods
class Main$Type extends MessageType$<Main> {
    constructor() {
        super("Main", [
            { no: 1, name: "type", kind: "enum", T: () => ["MessageType", MessageType] },
            { no: 2, name: "value", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value?: PartialMessage<Main>): Main {
        const message = { type: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Main>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Main): Main {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* MessageType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* optional bytes value */ 2:
                    message.value = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Main, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* MessageType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* optional bytes value = 2; */
        if (message.value !== undefined)
            writer.tag(2, WireType.LengthDelimited).bytes(message.value);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Main
 */
export const Main = new Main$Type();
